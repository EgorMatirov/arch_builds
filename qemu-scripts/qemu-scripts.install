#!/bin/bash -e

post_install()
{
    sudoers="/etc/sudoers.d/kvm"
    echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    echo ">>> READ BEFORE USAGE OF THESE SCRIPTS >>>"
    echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    echo ">>> This setup will add new rules to $sudoers file,"
    echo ">>> so it can be a secutiry hole in your server, please be careful."
    echo ">>>"
    echo ">>> If you want to have access to your LAN (probably internet)"
    echo ">>> you have to set up bridge and add bridge name to /etc/qemu-scripts.conf."
    echo ">>>"
    echo ">>> To add new machine you should do"
    echo ">>> cd /etc/rc.d && ln -s qemu qemu.\${MachineName} && sudo -su kvm"
    echo ">>> cd && mkdir \${MachineName} && cp examples/{config,run}.sh \${MachineName} && vim \${MachineName}/{config,run}.sh"
    echo ">>> After that you can use /etc/rc.d/qemu.\${MachineName} as regular init script (rc.d start/stop/restart qemu.\${MachineName}"
    echo ">>>"
    useradd -r -d /srv/kvm -g kvm kvm
    chown -R kvm:kvm /srv/kvm
    cmd_ifconfig="$(which ifconfig)"
    cmd_modprobe="$(which modprobe)"
    cmd_brctl="$(which brctl)"
    cmd_tunctl="$(which tunctl)"
    [[ ! -e $sudoers ]]
    echo "Cmnd_Alias QEMU=$cmd_ifconfig,$cmd_modprobe,$cmd_brctl,$cmd_tunctl" >>"$sudoers"
    echo "%kvm ALL=NOPASSWD: QEMU" >>"$sudoers"
    chmod 440 "$sudoers"
}

post_remove()
{
    userdel kvm
    rm -f /etc/sudoers.d/kvm
    echo ">>> User kvm was removed but files in /srv/kvm was not."
}
